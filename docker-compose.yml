version: '3.8'
services:
  web:
    build:
      context: .
    command: gunicorn --bind 0.0.0.0:9000 slackbot.wsgi --workers=4
    environment:
      - DEBUG
      - SECRET_KEY
      - DATABASE_URL
      - SLACK_CLIENT_ID
      - SLACK_CLIENT_SECRET
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "9000"
    networks:
      - django-network
  redis:
    image: redis:alpine
    container_name : redis
    command: redis-server --appendonly yes --replica-read-only no
    restart : unless-stopped
    networks:
      - django-network
  celery:
    restart: always
    build:
      context: .
    command: celery -A slackbot worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env.prod
    depends_on:
      - redis
    networks:
      - django-network
  nginx:
    build: nginx
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./data/nginx:/etc/nginx/conf.d:rw
      - ./data/certbot/conf:/etc/letsencrypt:rw
      - ./data/certbot/www:/var/www/certbot:rw
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - django-network
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt:rw
      - ./data/certbot/www:/var/www/certbot:rw
networks:
  django-network:
    name: django-network
volumes:
  media_volume:
  static_volume: